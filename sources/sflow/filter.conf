filter {

  if ([type] == "pmacct") {
    date {
      match => [ "stamp_updated", "YYYY-MM-dd HH:mm:ss" ]
    }

    if ([ip_src] == "") {
      drop {}
    }

    # Move ipv6 addresses to a seperate field
    grok {
      match         => { "ip_src" => "%{IPV6}" }
      add_field     => { "ipv6_src" => "%{ip_src}" }
      remove_field  => [ "ip_src" ]
    }
    grok {
      match         => { "ip_dst" => "%{IPV6}" }
      add_field     => { "ipv6_dst" => "%{ip_dst}" }
      remove_field  => [ "ip_dst" ]
    }

    # Inject ipdatabase info
    ciseipdb {
      hosts       => [ "elasticsearch" ]
      indexes     => [ "ipdatabase" ]
      ipaddress   => "%{ip_src}"
      target      => "ip_src"
      redis_host  => "redis"
    }

    ciseipdb {
      hosts       => [ "elasticsearch" ]
      indexes     => [ "ipdatabase" ]
      ipaddress   => "%{ip_dst}"
      target      => "ip_dst"
      redis_host  => "redis"
    }

    ciseipdb {
      hosts       => [ "elasticsearch" ]
      indexes     => [ "ipdatabase" ]
      ipaddress   => "%{peer_ip_src}"
      target      => "peer_ip_src"
      redis_host  => "redis"
    }

    # Copy sohonet customer service slug from src/dst to common field
    if ([ip_src_service_slug]) {
      ruby {
        code => "event['service_slug'] = event['ip_src_service_slug']"
      }
    }
    if ([ip_dst_service_slug]) {
      ruby {
        code => "event['service_slug'] = event['ip_dst_service_slug']"
      }
    }

    # Add geoip data for ip addresses
    geoip {
      source => "ip_src"
      target => "ip_src_geoip"
    }
    geoip {
      source => "ip_dst"
      target => "ip_dst_geoip"
    }
    if ([ip_dst_geoip]) {
      ruby {
        # Flatten ip_dst_geoip nested data
        code => "event['ip_dst_geoip'].each_pair do |k,v|; target = 'ip_dst_geoip_' + k; event[target] = v; end"
      }
      mutate {
        remove_field => [ "ip_dst_geoip" ]
      }
    }
    if ([ip_src_geoip]) {
      ruby {
        # Flatten ip_src_geoip nested data
        code => "event['ip_src_geoip'].each_pair do |k,v|; target = 'ip_src_geoip_' + k; event[target] = v; end"
      }
      mutate {
        remove_field => [ "ip_src_geoip" ]
      }
    }

  }

}
